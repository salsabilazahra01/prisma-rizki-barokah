image: gradle:7.4-jdk11-alpine

variables:
  GRADLE_OPTS: '-Dorg.gradle.daemon=false'
  SONAR_TOKEN: "e296af11fc321884fc924d7a610a3b47bc2fb08f"
  SONAR_HOST_URL: "https://sonarqube.cs.ui.ac.id"
  GIT_DEPTH: 0

before_script:
  #- echo $(pwd)
  - export GRADLE_USER_HOME=$(pwd)/.gradle
  # Remove caches
  - rm -f  .gradle/caches/modules-2/modules-2.lock
  - rm -fr .gradle/caches/*/plugin-resolution/

stages:
  - build
  - test
  - QualityCheck_and_Deploy



sonarqube-check:
  stage: QualityCheck_and_Deploy
  script: gradle sonarqube -Dsonar.projectKey=immanuel01_a7-anagram-margana_AYAsDxYgmTzPxwcesD0G -Dsonar.host.url=https://sonarqube.cs.ui.ac.id -Dsonar.login=e296af11fc321884fc924d7a610a3b47bc2fb08f
  allow_failure: true
  only:
    - merge_requests
    - master
    - staging

deploy-heroku:
  stage: QualityCheck_and_Deploy
  only:
    - staging
    - master
  image: ruby:latest
  before_script:
    - gem install dpl
    - wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
  script:
    - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_API_KEY
    - export HEROKU_API_KEY=$HEROKU_API_KEY
    - heroku run --app $HEROKU_APP_NAME migrate

build:
  stage: build
  script:
    - gradle assemble
  artifacts:
    paths:
      - build/libs/*.jar
    expire_in: 2 day

test:
  stage: test
  script:
    - export SPRING_PROFILES_ACTIVE=test
    - gradle check --stacktrace
    - cat build/reports/jacoco/test/html/index.html | grep -o '<tfoot>.*</tfoot>'
  coverage: '/Total.*?([0-9]{1,3})%/'
  artifacts:
    paths:
      - build/reports/jacoco/*
    expire_in: 7 day

