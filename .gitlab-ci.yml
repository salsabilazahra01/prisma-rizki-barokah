image: python:3.8
stages:
  - deploy
  # - sonarqube

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip

# .django_before_script: &django_before_script |-
#   pip install -r requirements.txt
#   python manage.py makemigrations
#   python manage.py migrate
#   python manage.py collectstatic --no-input

# sonarqube-check:
#   stage: sonarqube
#   image:
#     name: sonarsource/sonar-scanner-cli:latest
#     entrypoint: [ "" ]
#   variables:
#     SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
#     GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
#   cache:
#     key: "${CI_JOB_NAME}"
#     paths:
#       - .sonar/cache
#   script:
#     - sonar-scanner -D"sonar.projectKey=aprilian.tantra_ppl-indiv-tantra_AYZj8ZD5oB3q0Wl8w3wD" -D"sonar.sources=." -D"sonar.host.url=https://sonarqube.cs.ui.ac.id" -D"sonar.login=e9850f50a69e4ea0582a1e353443cde6b682faae"
#   only:
#     - main
#   allow_failure: true

deploy-heroku:
  image: ruby:3.2.1
  stage: deploy
  script:
    - gem install dpl
    - gem install faraday-net_http -v 2.1.0
    - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_API_KEY
    - export HEROKU_API_KEY=$HEROKU_API_KEY
  when: always
  environment:
    name: production
    url: $HEROKU_APP_HOST
  only:
    - main